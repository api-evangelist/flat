{
    "openapi": "3.0.0",
    "info": {
        "version": "2.1.0",
        "title": "Flat",
        "description": "The Flat API allows you to easily extend the abilities of the [Flat Platform](https:\/\/flat.io), with a wide range of use cases including the following: Creating and importing new music scores using MusicXML or MIDI files. Browsing, updating, copying, exporting the user's scores (for example in MP3, WAV or MIDI). Managing educational resources with Flat for Education: creating & updating the organization accounts, the classes, rosters and assignments. The Flat API is built on HTTP. Our API is RESTful It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body. ",
        "termsOfService": "https:\/\/flat.io\/legal"
    },
    "servers": [
        "httpsapi.flat.io\/v2"
    ],
    "paths": {
        "\/groups\/{group}\/scores": {
            "get": {
                "summary": "List group's scores",
                "description": "Get the list of scores shared with a group.\n",
                "operationId": "GetGroupScores",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "description": "Unique identifier of the group"
                    },
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "Filter the score forked from the score id `parent`"
                    }
                ]
            }
        },
        "\/me": {
            "get": {
                "summary": "Get current user profile",
                "description": "Get details about the current authenticated User.\n",
                "operationId": "GetAuthenticatedUser",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/scores": {
            "post": {
                "summary": "Create a new score",
                "description": "Use this API method to **create a new music score in the current User account**. You will need a MusicXML 3 (`vnd.recordare.musicxml` or `vnd.recordare.musicxml+xml`) or a MIDI (`audio\/midi`) file to create the new Flat document.\n\nThis API call will automatically create the first revision of the document, the score can be modified by the using our web application or by uploading a new revision of this file (`POST \/v2\/scores\/{score}\/revisions\/{revision}`).\n\nThe currently authenticated user will b",
                "operationId": "CreateScore",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": ""
                    }
                ]
            }
        },
        "\/scores\/{score}": {
            "delete": {
                "summary": "Delete a score",
                "description": "This API call will schedule the deletion of the score, its revisions, and whole history.\nThe user calling this API method must have the `aclAdmin` rights on this document to process this action.\nThe score won't be accessible anymore after calling this method and the user's quota will directly be updated.\n",
                "operationId": "DeleteScore",
                "deprecated": 0,
                "parameters": []
            },
            "get": {
                "summary": "Get a score's metadata",
                "description": "Get the details of a score identified by the `score` parameter in the URL.\nThe currently authenticated user must have at least a read access to the document to use this API call.\n",
                "operationId": "GetScore",
                "deprecated": 0,
                "parameters": []
            },
            "put": {
                "summary": "Edit a score's metadata",
                "description": "This API method allows you to change the metadata of a score document (e.g. its `title` or `privacy`), all the properties are optional.\n\nTo edit the file itself, create a new revision using the appropriate method (`POST \/v2\/scores\/{score}\/revisions\/{revision}`).\n",
                "operationId": "EditScore",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": ""
                    }
                ]
            }
        },
        "\/scores\/{score}\/collaborators": {
            "get": {
                "summary": "List the collaborators",
                "description": "This API call will list the different collaborators of a score and their rights on the document. The returned list will at least contain the owner of the document.\n\nCollaborators can be a single user (the object `user` will be populated) or a group (the object `group` will be populated).\n",
                "operationId": "GetScoreCollaborators",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Add a new collaborator",
                "description": "Share a score with a single user or a group. This API call allows to add, invite and update the collaborators of a document.\n- To add an existing Flat user to the document, specify its unique identifier in the `user` property.\n- To invite an external user to the document, specify its email in the `userEmail` property.\n- To add a Flat group to the document, specify its unique identifier in the `group` property.\n- To update an existing collaborator, process the same request with different rights.\n",
                "operationId": "AddScoreCollaborator",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": ""
                    }
                ]
            }
        },
        "\/scores\/{score}\/collaborators\/{collaborator}": {
            "delete": {
                "summary": "Delete a collaborator",
                "description": "Remove the specified collaborator from the score\n",
                "operationId": "RemoveScoreCollaborator",
                "deprecated": 0,
                "parameters": []
            },
            "get": {
                "summary": "Get a collaborator",
                "description": "Get the information about a collaborator (User or Group).\n",
                "operationId": "GetScoreCollaborator",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/scores\/{score}\/comments": {
            "get": {
                "summary": "List comments",
                "description": "This method lists the different comments added on a music score (documents and inline) sorted by their post dates.",
                "operationId": "GetScoreComments",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Post a new comment",
                "description": "Post a document or a contextualized comment on a document.\n\nPlease note that this method includes an anti-spam system for public scores. We don't guarantee that your comments will be accepted and displayed to end-user. Comments are be blocked by returning a `403` HTTP error and hidden from other users when the `spam` property is `true`.\n",
                "operationId": "PostScoreComment",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": ""
                    }
                ]
            }
        },
        "\/scores\/{score}\/comments\/{comment}": {
            "delete": {
                "summary": "Delete a comment",
                "description": "",
                "operationId": "DeleteScoreComment",
                "deprecated": 0,
                "parameters": []
            },
            "put": {
                "summary": "Update an existing comment",
                "description": "",
                "operationId": "UpdateScoreComment",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": ""
                    }
                ]
            }
        },
        "\/scores\/{score}\/comments\/{comment}\/resolved": {
            "delete": {
                "summary": "Mark the comment as unresolved",
                "description": "",
                "operationId": "MarkScoreCommentUnresolved",
                "deprecated": 0,
                "parameters": []
            },
            "put": {
                "summary": "Mark the comment as resolved",
                "description": "",
                "operationId": "MarkScoreCommentResolved",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/scores\/{score}\/fork": {
            "post": {
                "summary": "Fork a score",
                "description": "This API call will make a copy of the last revision of the specified score and create a new score. The copy of the score will have a privacy set to `private`.\n\nWhen using a [Flat for Education](https:\/\/flat.io\/edu) account, the inline and contextualized comments will be accessible in the child document.\n",
                "operationId": "ForkScore",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": ""
                    }
                ]
            }
        },
        "\/scores\/{score}\/revisions": {
            "get": {
                "summary": "List the revisions",
                "description": "When creating a score or saving a new version of a score, a revision is created in our storage. This method allows you to list all of them, sorted by last modification.\n\nDepending the plan of the account, this list can be trunked to the few last revisions.\n",
                "operationId": "GetScoreRevisions",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Create a new revision",
                "description": "Update a score by uploading a new revision for this one.\n",
                "operationId": "CreateScoreRevision",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": ""
                    }
                ]
            }
        },
        "\/scores\/{score}\/revisions\/{revision}": {
            "get": {
                "summary": "Get a score revision",
                "description": "When creating a score or saving a new version of a score, a revision is created in our storage. This method allows you to get a specific\nrevision metadata.\n",
                "operationId": "GetScoreRevision",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/scores\/{score}\/revisions\/{revision}\/{format}": {
            "get": {
                "summary": "Get a score revision data",
                "description": "Retrieve the file corresponding to a score revision (the following formats are available: Flat JSON\/Adagio JSON `json`, MusicXML\n`mxl`\/`xml`, MP3 `mp3`, WAV `wav`, MIDI `midi`, or a tumbnail of the first page `thumbnail.png`).\n",
                "operationId": "GetScoreRevisionData",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "format",
                        "in": "path",
                        "description": "The format of the file you will retrieve"
                    },
                    {
                        "name": "onlyCached",
                        "in": "query",
                        "description": "Only return files already generated and cached in Flat's production\ncache. If the file is not availabe, a 404 will be returned\n"
                    },
                    {
                        "name": "parts",
                        "in": "query",
                        "description": "An optional a set of parts to be exported. This parameter must be\nspecified with a list of integers. For example \"1,2,5\".\n"
                    }
                ]
            }
        },
        "\/users\/{user}": {
            "get": {
                "summary": "Get a public user profile",
                "description": "Get a public profile of a Flat User.\n",
                "operationId": "GetUser",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "This route parameter is the unique identifier of the user. You can specify an email instead of an unique identifier. If you are executing this request authenticated, you can use `me` as a value instead of the current User unique identifier to work on the current authenticated user.\n"
                    }
                ]
            }
        },
        "\/users\/{user}\/likes": {
            "get": {
                "summary": "List liked scores",
                "description": "",
                "operationId": "GerUserLikes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Return only the identifiers of the scores"
                    }
                ]
            }
        },
        "\/users\/{user}\/scores": {
            "get": {
                "summary": "List user's scores",
                "description": "Get the list of scores owned by the User\n",
                "operationId": "GetUserScores",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "Filter the score forked from the score id `parent`"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "FlatErrorResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "message": {
                        "description": "",
                        "type": "get"
                    },
                    "param": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Group": {
                "type": "object",
                "properties": {
                    "creationDate": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "organization": {
                        "description": "",
                        "type": "get"
                    },
                    "readOnly": {
                        "description": "",
                        "type": "get"
                    },
                    "type": {
                        "description": "",
                        "type": "get"
                    },
                    "usersCount": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreCollaborator": {
                "type": "object",
                "properties": {
                    "aclAdmin": {
                        "description": "",
                        "type": "get"
                    },
                    "aclRead": {
                        "description": "",
                        "type": "get"
                    },
                    "aclWrite": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "score": {
                        "description": "",
                        "type": "get"
                    },
                    "userEmail": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreCollaboratorCreation": {
                "type": "object",
                "properties": {
                    "aclAdmin": {
                        "description": "",
                        "type": "get"
                    },
                    "aclRead": {
                        "description": "",
                        "type": "get"
                    },
                    "aclWrite": {
                        "description": "",
                        "type": "get"
                    },
                    "group": {
                        "description": "",
                        "type": "get"
                    },
                    "user": {
                        "description": "",
                        "type": "get"
                    },
                    "userEmail": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreComment": {
                "type": "object",
                "properties": {
                    "comment": {
                        "description": "",
                        "type": "get"
                    },
                    "date": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "mentions": {
                        "description": "",
                        "type": "get"
                    },
                    "modificationDate": {
                        "description": "",
                        "type": "get"
                    },
                    "rawComment": {
                        "description": "",
                        "type": "get"
                    },
                    "replyTo": {
                        "description": "",
                        "type": "get"
                    },
                    "resolved": {
                        "description": "",
                        "type": "get"
                    },
                    "resolvedBy": {
                        "description": "",
                        "type": "get"
                    },
                    "revision": {
                        "description": "",
                        "type": "get"
                    },
                    "score": {
                        "description": "",
                        "type": "get"
                    },
                    "spam": {
                        "description": "",
                        "type": "get"
                    },
                    "type": {
                        "description": "",
                        "type": "get"
                    },
                    "user": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreCommentContext": {
                "type": "object",
                "properties": {
                    "measureUuids": {
                        "description": "",
                        "type": "get"
                    },
                    "partUuid": {
                        "description": "",
                        "type": "get"
                    },
                    "staffIdx": {
                        "description": "",
                        "type": "get"
                    },
                    "startDpq": {
                        "description": "",
                        "type": "get"
                    },
                    "startTimePos": {
                        "description": "",
                        "type": "get"
                    },
                    "stopDpq": {
                        "description": "",
                        "type": "get"
                    },
                    "stopTimePos": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreCommentCreation": {
                "type": "object",
                "properties": {
                    "comment": {
                        "description": "",
                        "type": "get"
                    },
                    "mentions": {
                        "description": "",
                        "type": "get"
                    },
                    "rawComment": {
                        "description": "",
                        "type": "get"
                    },
                    "replyTo": {
                        "description": "",
                        "type": "get"
                    },
                    "revision": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreCommentUpdate": {
                "type": "object",
                "properties": {
                    "comment": {
                        "description": "",
                        "type": "get"
                    },
                    "rawComment": {
                        "description": "",
                        "type": "get"
                    },
                    "revision": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreCommentsCounts": {
                "type": "object",
                "properties": {
                    "monthly": {
                        "description": "",
                        "type": "get"
                    },
                    "total": {
                        "description": "",
                        "type": "get"
                    },
                    "unique": {
                        "description": "",
                        "type": "get"
                    },
                    "weekly": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreCreation": {
                "type": "object",
                "properties": {
                    "googleDriveFolder": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreLikesCounts": {
                "type": "object",
                "properties": {
                    "monthly": {
                        "description": "",
                        "type": "get"
                    },
                    "total": {
                        "description": "",
                        "type": "get"
                    },
                    "weekly": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreModification": {
                "type": "object",
                "properties": {
                    "sharingKey": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreRevision": {
                "type": "object",
                "properties": {
                    "autosave": {
                        "description": "",
                        "type": "get"
                    },
                    "collaborators": {
                        "description": "",
                        "type": "get"
                    },
                    "creationDate": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "user": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreRevisionCreation": {
                "type": "object",
                "properties": {
                    "autosave": {
                        "description": "",
                        "type": "get"
                    },
                    "description": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreRevisionStatistics": {
                "type": "object",
                "properties": {
                    "additions": {
                        "description": "",
                        "type": "get"
                    },
                    "deletions": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreRights": {
                "type": "object",
                "properties": {
                    "aclAdmin": {
                        "description": "",
                        "type": "get"
                    },
                    "aclWrite": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreSource": {
                "type": "object",
                "properties": {
                    "googleDrive": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreSummary": {
                "type": "object",
                "properties": {
                    "htmlUrl": {
                        "description": "",
                        "type": "get"
                    },
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "sharingKey": {
                        "description": "",
                        "type": "get"
                    },
                    "title": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ScoreViewsCounts": {
                "type": "object",
                "properties": {
                    "monthly": {
                        "description": "",
                        "type": "get"
                    },
                    "total": {
                        "description": "",
                        "type": "get"
                    },
                    "weekly": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "UserBasics": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "get"
                    },
                    "isPowerUser": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "picture": {
                        "description": "",
                        "type": "get"
                    },
                    "printableName": {
                        "description": "",
                        "type": "get"
                    },
                    "username": {
                        "description": "",
                        "type": "get"
                    }
                }
            }
        }
    }
}